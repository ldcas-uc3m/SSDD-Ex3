/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _TUPLAS_H_RPCGEN
#define _TUPLAS_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#define MAX_VALUE1 256

struct Respuesta {
	int result;
	char *value1;
	int value2;
	double value3;
};
typedef struct Respuesta Respuesta;

struct tuplas_set_value_1_argument {
	int key;
	char *value1;
	int value2;
	double value3;
};
typedef struct tuplas_set_value_1_argument tuplas_set_value_1_argument;

struct tuplas_modify_value_1_argument {
	int key;
	char *value1;
	int value2;
	double value3;
};
typedef struct tuplas_modify_value_1_argument tuplas_modify_value_1_argument;

struct tuplas_copy_key_1_argument {
	int key1;
	int key2;
};
typedef struct tuplas_copy_key_1_argument tuplas_copy_key_1_argument;

#define TUPLASPROG 420
#define TUPLASPROGVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define tuplas_init 0
extern  enum clnt_stat tuplas_init_1(int *, CLIENT *);
extern  bool_t tuplas_init_1_svc(int *, struct svc_req *);
#define tuplas_set_value 1
extern  enum clnt_stat tuplas_set_value_1(int , char *, int , double , int *, CLIENT *);
extern  bool_t tuplas_set_value_1_svc(int , char *, int , double , int *, struct svc_req *);
#define tuplas_get_value 2
extern  enum clnt_stat tuplas_get_value_1(int , struct Respuesta *, CLIENT *);
extern  bool_t tuplas_get_value_1_svc(int , struct Respuesta *, struct svc_req *);
#define tuplas_modify_value 3
extern  enum clnt_stat tuplas_modify_value_1(int , char *, int , double , int *, CLIENT *);
extern  bool_t tuplas_modify_value_1_svc(int , char *, int , double , int *, struct svc_req *);
#define tuplas_exist 4
extern  enum clnt_stat tuplas_exist_1(int , int *, CLIENT *);
extern  bool_t tuplas_exist_1_svc(int , int *, struct svc_req *);
#define tuplas_copy_key 5
extern  enum clnt_stat tuplas_copy_key_1(int , int , int *, CLIENT *);
extern  bool_t tuplas_copy_key_1_svc(int , int , int *, struct svc_req *);
#define tuplas_delete_key 6
extern  enum clnt_stat tuplas_delete_key_1(int , int *, CLIENT *);
extern  bool_t tuplas_delete_key_1_svc(int , int *, struct svc_req *);
extern int tuplasprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define tuplas_init 0
extern  enum clnt_stat tuplas_init_1();
extern  bool_t tuplas_init_1_svc();
#define tuplas_set_value 1
extern  enum clnt_stat tuplas_set_value_1();
extern  bool_t tuplas_set_value_1_svc();
#define tuplas_get_value 2
extern  enum clnt_stat tuplas_get_value_1();
extern  bool_t tuplas_get_value_1_svc();
#define tuplas_modify_value 3
extern  enum clnt_stat tuplas_modify_value_1();
extern  bool_t tuplas_modify_value_1_svc();
#define tuplas_exist 4
extern  enum clnt_stat tuplas_exist_1();
extern  bool_t tuplas_exist_1_svc();
#define tuplas_copy_key 5
extern  enum clnt_stat tuplas_copy_key_1();
extern  bool_t tuplas_copy_key_1_svc();
#define tuplas_delete_key 6
extern  enum clnt_stat tuplas_delete_key_1();
extern  bool_t tuplas_delete_key_1_svc();
extern int tuplasprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Respuesta (XDR *, Respuesta*);
extern  bool_t xdr_tuplas_set_value_1_argument (XDR *, tuplas_set_value_1_argument*);
extern  bool_t xdr_tuplas_modify_value_1_argument (XDR *, tuplas_modify_value_1_argument*);
extern  bool_t xdr_tuplas_copy_key_1_argument (XDR *, tuplas_copy_key_1_argument*);

#else /* K&R C */
extern bool_t xdr_Respuesta ();
extern bool_t xdr_tuplas_set_value_1_argument ();
extern bool_t xdr_tuplas_modify_value_1_argument ();
extern bool_t xdr_tuplas_copy_key_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_TUPLAS_H_RPCGEN */
